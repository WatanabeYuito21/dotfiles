# ====================================================================================
# tmux.conf
# ====================================================================================

# ------------------------------------------------------------------------------
# プラグイン設定 (最初に定義)
# ------------------------------------------------------------------------------

# TPMプラグインマネージャー
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-yank'

# ------------------------------------------------------------------------------
# 基本設定
# ------------------------------------------------------------------------------

# Prefixキーの変更 (Ctrl-j)
unbind C-b
set -g prefix C-j
bind-key C-j send-prefix

# リロード設定 (Prefix + r)
bind r source-file ~/.config/tmux/tmux.conf \; display "Config reloaded!"

# ------------------------------------------------------------------------------
# 表示・カラー設定 
# ------------------------------------------------------------------------------

# True Color対応
set -g default-terminal 'tmux-256color'
set-option -sa terminal-overrides ",*256col*:Tc"

# エスケープタイムを短縮
set -s escape-time 0

# ウィンドウとペインの番号を1から開始
set -g base-index 1
setw -g pane-base-index 1

# ウィンドウ番号を自動的に振り直す
set -g renumber-windows on

# マウス操作を有効化
set -g mouse on

# 履歴の上限を増やす
set -g history-limit 50000

# ------------------------------------------------------------------------------
# キーバインド設定
# ------------------------------------------------------------------------------

# Vimスタイルのキーバインド
setw -g mode-keys vi

# ペイン移動 (Prefix + hjkl)
bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R

# ペインリサイズ (Prefix + HJKL)
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# ペイン分割
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# 新しいウィンドウを現在のディレクトリで作成
bind c new-window -c "#{pane_current_path}"

# ウィンドウ移動の改善
bind -r C-h previous-window
bind -r C-l next-window

# 最後のウィンドウに移動
bind ^ last-window

# ------------------------------------------------------------------------------
# コピーモード設定
# ------------------------------------------------------------------------------

# コピーモードのキーバインド
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'C-v' send -X rectangle-toggle
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel

# Prefix + v でコピーモード開始
bind v copy-mode

# ------------------------------------------------------------------------------
# ステータスバー設定
# ------------------------------------------------------------------------------

# ステータスバーの更新間隔
set -g status-interval 1

# ステータスバーの位置
set -g status-position bottom

# メッセージ表示色
set -g message-style fg=colour68,reverse,bg=brightwhite

# ペインボーダーの色設定
set -g pane-border-style fg=colour111,bg=colour236
set -g pane-active-border-style fg=colour111,bg=colour236

# ステータスバーの色設定
set -g status-style 'bg=#2d3748,fg=#e2e8f0'

# ウィンドウリストの色設定
setw -g window-status-style 'fg=#a0aec0,bg=default'
setw -g window-status-current-style 'fg=#ffffff,bg=#4a5568,bold'

# ステータス左側
set -g status-left-length 30
set -g status-left '#[fg=#63b3ed,bold]❐ #S #[fg=#a0aec0]| '

# ステータス右側
set -g status-right-length 50
set -g status-right '#[fg=#a0aec0]%Y-%m-%d(%a) %H:%M:%S'

# ウィンドウ名の自動変更を無効化
set-option -g allow-rename off

# ------------------------------------------------------------------------------
# Neovim統合設定
# ------------------------------------------------------------------------------

# Neovimとの連携 (vim-tmux-navigator対応)
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|[ln]?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }

bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'

# ------------------------------------------------------------------------------
# プラグイン設定
# ------------------------------------------------------------------------------

# tmux-resurrect設定
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-capture-pane-contents 'on'

# tmux-continuum設定
set -g @continuum-restore 'on'
set -g @continuum-save-interval '15'

# tmux-yank設定 (OS別)
if-shell 'test "$(uname)" = "Darwin"' 'set -g @yank_selection_mouse "clipboard"'
if-shell 'test "$(uname)" = "Linux"' 'set -g @yank_selection_mouse "primary"'

# ------------------------------------------------------------------------------
# ユーティリティキーバインド
# ------------------------------------------------------------------------------

# セッション管理の改善
bind S choose-session
bind K confirm-before -p "kill-session #S? (y/n)" kill-session

# ペイン同期の切り替え
bind y setw synchronize-panes \; display "Sync panes: #{?synchronize-panes,ON,OFF}"

# ペインの全画面表示切り替え
bind f resize-pane -Z

# 便利な開発用ショートカット
bind D neww -c "#{pane_current_path}" -n "dev" 
bind T neww -c "#{pane_current_path}" -n "test"
bind M neww -c "#{pane_current_path}" -n "logs"

# ------------------------------------------------------------------------------
# 通知設定
# ------------------------------------------------------------------------------

# ベルやアクティビティ通知を調整
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
setw -g monitor-activity off
set -g bell-action none

# ------------------------------------------------------------------------------
# TPM初期化
# ------------------------------------------------------------------------------

# TPMの初期化
run '~/.tmux/plugins/tpm/tpm'
